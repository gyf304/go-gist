name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ "windows", "linux", "darwin" ]
        goarch: [ "amd64", "386" ]
        exclude:
        - goos: darwin
          goarch: "386"
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build
      if: matrix.goos != 'windows'
      env:
        GOARCH: ${{ matrix.goarch }}
        GOOS: ${{ matrix.goos }}
        CGO: 0
      run: |
        mkdir -p build/${GOOS}-${GOARCH}
        go build -o build/${GOOS}-${GOARCH}/gist .
        tar czvf gist-${GOOS}-${GOARCH}.tar.gz -C build/${GOOS}-${GOARCH} gist
        
    - name: Build Windows
      if: matrix.goos == 'windows'
      env:
        GOARCH: ${{ matrix.goarch }}
        GOOS: ${{ matrix.goos }}
        CGO: 0
      run: |
        mkdir -p build/${GOOS}-${GOARCH}
        go build -o build/${GOOS}-${GOARCH}/gist.exe .
        zip -j gist-${GOOS}-${GOARCH}.zip build/${GOOS}-${GOARCH}/gist.exe
        
    - name: Upload Artifacts
      if: matrix.goos != 'windows'
      uses: actions/upload-artifact@v2.2.1
      with:
        name: gist-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
        path: gist-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
        
    - name: Upload Windows Artifacts
      if: matrix.goos == 'windows'
      uses: actions/upload-artifact@v2.2.1
      with:
        name: gist-${{ matrix.goos }}-${{ matrix.goarch }}.zip
        path: gist-${{ matrix.goos }}-${{ matrix.goarch }}.zip
        
    - name: Get the upload URL release
      if: github.event_name == 'release'
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload Release Asset
      if: github.event_name == 'release' && matrix.goos != 'windows'
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: gist-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
        asset_name: gist-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
        asset_content_type: application/gzip
  
    - name: Upload Windows Release Asset
      if: github.event_name == 'release' && matrix.goos == 'windows'
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: gist-${{ matrix.goos }}-${{ matrix.goarch }}.zip
        asset_name: gist-${{ matrix.goos }}-${{ matrix.goarch }}.zip
        asset_content_type: application/zip
